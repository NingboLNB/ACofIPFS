!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Init	access_record.go	/^func (t *SimpleChaincode) Init(stub shim.ChaincodeStubInterface) pb.Response {$/;"	f
Invoke	access_record.go	/^func (t *SimpleChaincode) Invoke(stub shim.ChaincodeStubInterface) pb.Response {$/;"	f
SimpleChaincode	access_record.go	/^type SimpleChaincode struct {$/;"	t
getEnvirment	access_record.go	/^func  getEnvirment(stub shim.ChaincodeStubInterface) string{$/;"	f
isvalid	access_record.go	/^func isvalid([]byte) bool {$/;"	f
main	access_record.go	/^func main() {$/;"	f
main	access_record.go	/^package main$/;"	p
putAccessLog	access_record.go	/^func putAccessLog(stub shim.ChaincodeStubInterface,args []string) int{$/;"	f
putGrantLog	access_record.go	/^func (t *SimpleChaincode) putGrantLog(stub shim.ChaincodeStubInterface,args []string) pb.Response{$/;"	f
putPublicKey	access_record.go	/^func (t *SimpleChaincode) putPublicKey(stub shim.ChaincodeStubInterface,args []string) pb.Response{$/;"	f
queryAccessLog	access_record.go	/^func (t *SimpleChaincode) queryAccessLog(stub shim.ChaincodeStubInterface) pb.Response{$/;"	f
queryGrantLog	access_record.go	/^func (t *SimpleChaincode) queryGrantLog(stub shim.ChaincodeStubInterface) pb.Response{$/;"	f
tokenValidation	access_record.go	/^func (t *SimpleChaincode) tokenValidation(stub shim.ChaincodeStubInterface,args []string) pb.Response{$/;"	f
